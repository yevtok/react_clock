{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toUTCString","slice","timerSecondsId","this","window","setInterval","setState","prevProps","prevState","clockName","props","console","debug","info","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleHideComponent","event","preventDefault","handleShowComponent","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAF/C,EAKEC,eAAiB,EALnB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,eAAiBE,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAER,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAC1D,OAVP,gCAaE,SAAmBM,EAAkBC,GAC/BD,EAAUE,YAAcN,KAAKO,MAAMD,WAErCE,QAAQC,MAAR,uBAA8BL,EAAUE,UAAxC,eAAwDN,KAAKO,MAAMD,YAGjED,EAAUV,OAASK,KAAKN,MAAMC,MAEhCa,QAAQE,KAAKV,KAAKN,MAAMC,QArB9B,kCAyBE,WACEM,OAAOU,cAAcX,KAAKD,kBA1B9B,oBA6BE,WACE,IAAQO,EAAcN,KAAKO,MAAnBD,UAER,OACE,sBAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAGF,YAED,sBAAMM,UAAU,cAAhB,SACGZ,KAAKN,MAAMC,cAzCtB,GAA2BkB,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GAOX,IAAMG,EAAb,4MACEzB,MAAe,CACb0B,UAAU,EACVd,UAAW,WAHf,EAMEe,QAAU,EANZ,EAwBEC,oBAAsB,SAACC,GACrBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KA1B9B,EA6BEK,oBAAsB,SAACF,GACrBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KA/B9B,uDAQE,WAA2B,IAAD,OACxBpB,KAAKqB,QAAUpB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEG,UAAWS,QAC1B,MAEHW,SAASC,iBAAiB,cAAe3B,KAAKsB,qBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,uBAd5C,kCAiBE,WACExB,OAAOU,cAAcX,KAAKqB,SAE1BK,SAASE,oBAAoB,cAAe5B,KAAKsB,qBACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,uBArB/C,oBAkCE,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,6CACCZ,KAAKN,MAAM0B,UACP,cAAC,EAAD,CAAOd,UAAWN,KAAKN,MAAMY,mBAvC1C,GAAyBO,IAAMC,WCX/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.71656d2d.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerSecondsId = 0;\n\n  componentDidMount(): void {\n    this.timerSecondsId = window.setInterval(() => {\n      this.setState({ date: new Date().toUTCString().slice(-12, -4) });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n\n    if (prevState.date !== this.state.date) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerSecondsId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleHideComponent);\n    document.addEventListener('click', this.handleShowComponent);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleHideComponent);\n    document.removeEventListener('click', this.handleShowComponent);\n  }\n\n  handleHideComponent = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleShowComponent = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock\n          && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}